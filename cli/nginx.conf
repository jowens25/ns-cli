
# nginx.conf
user www-data;
worker_processes 1;
pid /run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;
    server_tokens off;
    
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    client_body_timeout 10;
    client_header_timeout 10;
    keepalive_timeout 30;
    send_timeout 10;
    
    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;  # Changed: TLSv1.3 should use client preference
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Gzip Configuration
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_min_length 1000;  # Added: Don't compress very small files
    gzip_types 
        text/plain 
        text/css 
        text/xml 
        text/javascript 
        application/json 
        application/javascript 
        application/xml+rss 
        application/atom+xml 
        image/svg+xml;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Redirect HTTP â†’ HTTPS
    server {
        listen 80 default_server;  # Added default_server
        listen [::]:80 default_server;  # Added IPv6 support
        server_name localhost;
        return 301 https://$host$request_uri;
    }
    
    # HTTPS server
    server {
        listen 443 ssl http2 default_server;  # Added default_server
        listen [::]:443 ssl http2 default_server;  # Added IPv6 support
        server_name localhost;
        
        # SSL certificates
        ssl_certificate /etc/nginx/ssl/selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/selfsigned.key;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;  # Added HSTS
        
        # API proxy
        location /api/v1/ {
            proxy_pass http://localhost:5000/;  # Added trailing slash
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_buffering off;  # Added: Disable buffering for real-time responses
        }
        
        # Fonts (Flutter icons)
        location ~* \.(woff|woff2|ttf|eot|otf)$ {
            root /var/www/frontend;

            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";  # Added: CORS for fonts
        }
        
        # Other static assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            root /var/www/frontend;

            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # SPA fallback - this should be last
        location / {
            root /var/www/frontend;
            index index.html;
            try_files $uri $uri/ /index.html;  # Added $uri/ for directory handling


            # Access Control
			#allow all;
            # End Access Control

            
        }
    }
}